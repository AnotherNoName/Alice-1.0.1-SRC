//Deobfuscated with https://github.com/SimplyProgrammer/Minecraft-Deobfuscator3000 using mappings "C:\1.12.2"!

/*
 * Decompiled with CFR 0.150.
 * 
 * Could not load the following classes:
 *  net.minecraft.block.BlockAir
 *  net.minecraft.block.BlockObsidian
 *  net.minecraft.client.Minecraft
 *  net.minecraft.entity.Entity
 *  net.minecraft.init.Blocks
 *  net.minecraft.util.EnumFacing
 *  net.minecraft.util.math.BlockPos
 */
package me.snow.aclient.util.ca.sc;

import java.util.ArrayList;
import me.snow.aclient.util.ca.sc.CrystalUtilSC;
import net.minecraft.block.BlockAir;
import net.minecraft.block.BlockObsidian;
import net.minecraft.client.Minecraft;
import net.minecraft.entity.Entity;
import net.minecraft.init.Blocks;
import net.minecraft.util.EnumFacing;
import net.minecraft.util.math.BlockPos;

public class VulnerabilityUtil {
    public static /* synthetic */ Minecraft mc;

    public static ArrayList<BlockPos> getVulnerablePositions(BlockPos blockPos) {
        ArrayList<BlockPos> arrayList = new ArrayList<BlockPos>();
        if (!(VulnerabilityUtil.mc.world.getBlockState(blockPos).getBlock() instanceof BlockAir)) {
            return arrayList;
        }
        for (EnumFacing enumFacing : EnumFacing.HORIZONTALS) {
            if (VulnerabilityUtil.mc.world.getBlockState(blockPos.offset(enumFacing)).getBlock() instanceof BlockAir) {
                return new ArrayList<BlockPos>();
            }
            if (!(VulnerabilityUtil.mc.world.getBlockState(blockPos.offset(enumFacing)).getBlock() instanceof BlockObsidian)) continue;
            if (CrystalUtilSC.canPlaceCrystal(blockPos.offset(enumFacing, 2).down()) && VulnerabilityUtil.mc.world.getBlockState(blockPos.offset(enumFacing)).getBlock() != Blocks.AIR) {
                arrayList.add(blockPos.offset(enumFacing));
                continue;
            }
            if (!CrystalUtilSC.canPlaceCrystal(blockPos.offset(enumFacing)) || VulnerabilityUtil.mc.world.getBlockState(blockPos.offset(enumFacing)).getBlock() == Blocks.AIR || VulnerabilityUtil.mc.world.getBlockState(blockPos.offset(enumFacing).down()).getBlock() != Blocks.BEDROCK && VulnerabilityUtil.mc.world.getBlockState(blockPos.offset(enumFacing).down()).getBlock() != Blocks.OBSIDIAN) continue;
            arrayList.add(blockPos.offset(enumFacing));
        }
        return arrayList;
    }

    public static boolean isVulnerable(Entity entity) {
        BlockPos blockPos = new BlockPos(entity);
        return !VulnerabilityUtil.getVulnerablePositions(blockPos).isEmpty();
    }

    static {
        mc = Minecraft.getMinecraft();
    }
}

